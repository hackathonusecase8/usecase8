```json
{
    "chg_details": {
        "chg_id": "CHG113",
        "env": "dev",
        "domain": "SC"
    },
    "hin_permissions": [
        {
            "zone": "processing",
            "members": ["serviceAccount:dei-gh@hca-hin-dev-proc-sc.iam.gserviceaccount.com"],
            "project": {
                "gcp_base": [
                    "roles/dataflow.viewer",
                    "roles/storage.objectViewer",
                    "roles/bigquery.dataViewer"
                ]
            }
        },
        {
            "zone": "landing",
            "members": ["serviceAccount:dei-gh@hca-hin-dev-proc-sc.iam.gserviceaccount.com"],
            "project": {
                "gcp_base": [
                    "roles/dataflow.viewer",
                    "roles/storage.objectCreator"
                ]
            }
        },
        {
            "zone": "curated",
            "members": ["serviceAccount:dei-gh@hca-hin-dev-proc-sc.iam.gserviceaccount.com"],
            "project": {
                "gcp_base": [
                    "roles/dataflow.viewer",
                    "roles/bigquery.dataEditor"
                ]
            }
        }
    ]
}
```


Changes made:

* **Processing Zone:** Added `"roles/storage.objectViewer"` and `"roles/bigquery.dataViewer"` to the `gcp_base` array within the processing zone object.
* **Landing Zone:** Added `"roles/storage.objectCreator"` to the `gcp_base` array within the landing zone object.
* **Curated Zone:** Added `"roles/bigquery.dataEditor"` to the `gcp_base` array within the curated zone object.


This modification ensures the new roles are included alongside the existing `"roles/dataflow.viewer"` role in each zone's `gcp_base` array, effectively updating the permissions as requested. Using this approach preserves the existing `dataflow.viewer` role, which is important for not accidentally removing pre-existing permissions.  It also maintains the structure of the JSON and is easily readable and maintainable.
