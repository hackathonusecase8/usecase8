```json
{
    "chg_details": {
        "chg_id": "CHG113",
        "env": "dev",
        "domain": "SC"
    },
    "hin_permissions": [
        {
            "zone": "processing",
            "members": ["serviceAccount:dei-gh@hca-hin-dev-proc-sc.iam.gserviceaccount.com"],
            "project": {
                "gcp_base": [
                    "roles/dataflow.viewer",
                    "roles/storage.objectViewer",
                    "roles/bigquery.dataViewer"
                ]
            }
        },
        {
            "zone": "landing",
            "members": ["serviceAccount:dei-gh@hca-hin-dev-proc-sc.iam.gserviceaccount.com"],
            "project": {
                "gcp_base": [
                    "roles/dataflow.viewer",
                    "roles/storage.objectCreator"
                ]
            }
        },
        {
            "zone": "curated",
            "members": ["serviceAccount:dei-gh@hca-hin-dev-proc-sc.iam.gserviceaccount.com"],
            "project": {
                "gcp_base": [
                    "roles/dataflow.viewer",
                    "roles/bigquery.dataEditor"
                ]
            }
        }
    ]
}
```


The solution iterates through the `hin_permissions` array, checks the `zone` of each object, and appends the new roles to the `gcp_base` array within the `project` object.  This preserves the existing `roles/dataflow.viewer` role while adding the new roles specified in the prompt. Using this method avoids the need for complex merging logic and ensures the correct roles are applied to the correct zones.
